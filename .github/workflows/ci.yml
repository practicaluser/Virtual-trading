# .github/workflows/ci.yml

name: Virtual Trading CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  backend-check:
    name: ✅ Backend Check
    runs-on: ubuntu-latest

    services:
      # docker-compose.yml의 db 서비스를 참고하여 postgres 서비스 정의
      postgres:
        # image: postgres:14
        image: postgres:14
        # environment: - POSTGRES_...
        env:
          POSTGRES_DB: stocksim_db
          POSTGRES_USER: stocksim_user
          POSTGRES_PASSWORD: stocksim_password
        # ports: - "8765:5432"
        ports:
          - 8765:5432
        # DB가 준비될 때까지 대기하는 옵션 (CI에서 매우 중요)
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 backend/ --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run Django unit tests
        # docker-compose.yml의 설정과 동일하게 환경 변수를 설정하여 Django에 전달
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 8765 # 포트 번호 변경
          DB_NAME: stocksim_db
          DB_USER: stocksim_user
          DB_PASSWORD: stocksim_password
        run: python backend/manage.py test users
